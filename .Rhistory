devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(yaml)
df <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
as.yaml(df)
cat(as.yaml(df))
featureset_metadata = function(df){
if(self$is_df_null(df)){
stop("Error: Dataframe is empty, can't compute metadata")
}
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["type"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata = featureset_metadata(df)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["type"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata = featureset_metadata(df)
metadata
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata = featureset_metadata(df)
as.yaml(metadata)
cat(as.yaml(metadata))
library(jsonlite)
cat(as.yaml(toJSON(metadata)))
ydf <- yaml.load_file("test.yaml")
ydf
toJSON(ydf)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
met_data[["name"]] = list(i)
met_data[["description"]] = list("none")
met_data[["schema"]] = list(typeof(df[[i]]))
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata <- featureset_metadata(df)
metadata
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
met_data[["name"]] = list(i=i)
met_data[["description"]] = list(none="none")
met_data[["schema"]] = list(type=typeof(df[[i]]))
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata <- featureset_metadata(df)
metadata
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
met_data[["name"]] = c(i=i)
met_data[["description"]] = c(none="none")
met_data[["schema"]] = c(type=typeof(df[[i]]))
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata <- featureset_metadata(df)
memetadata
metadata
toJSON(metadata)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list(name=i, description="none",schema=typeof(df[[i]]))
# met_data[["name"]] = i
# met_data[["description"]] = "none"
# met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata <- featureset_metadata(df)
toJSON(metadata)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
met_data = list(name=i, description="none",schema=typeof(df[[i]]))
# met_data[["name"]] = i
# met_data[["description"]] = "none"
# met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata <- featureset_metadata(df)
toJSON(metadata)
toJSON(ydf)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
#met_data = list(name=i, description="none",schema=typeof(df[[i]]))
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
toJSON(featureset_metadata(df))
library(jsonlite)
accuracy = list("accuracy" = 0.9)
loss <- list("loss" = 0.1)
metrics <- list()
metrics[["metrics"]] <- list(accuracy, loss)
metrics[["sort"]] <- "accuracy"
toJSON(metrics)
temp = list()
temp[["edrf"]] = i
temp[["edrf"]] = 10
temp[["edrffcf"]] = 10
toJSON(temp)
typeof(ydf)
ydf[1]
ydf[2]
metadata[[1]]
metadata[1]
metadata
toJSON(metadata)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
#met_data = list(name=i, description="none",schema=typeof(df[[i]]))
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
toJSON(featureset_metadata(df))
metadata = featureset_metadata(df)
toJSON(metadata)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
#met_data = list(name=i, description="none",schema=typeof(df[[i]]))
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata = featureset_metadata(df)
toJSON(metadata)
library(jsonlite)
df <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
met_data = list(name=i, description="none",schema=typeof(df[[i]]))
# met_data[["name"]] = i
# met_data[["description"]] = "none"
# met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
fs = DkubeFeature$new()
metadata = featureset_metadata(df)
toJSON(metadta)
toJSON(metadata)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
# met_data = list(name=i, description="none",schema=typeof(df[[i]]))
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(data.frame(metadata))
}
metadata = featureset_metadata(df)
toJSON(metadata)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = list()
# met_data = list(name=i, description="none",schema=typeof(df[[i]]))
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = list(met_data)
index = index + 1
}
return(data.frame(metadata))
}
metadata = featureset_metadata(df)
toJSON(metadata)
t = c()
t[[1]] = "ws"
t[[2]] = "wds"
t
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = c()
# met_data = list(name=i, description="none",schema=typeof(df[[i]]))
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = list(met_data)
index = index + 1
}
return(data.frame(metadata))
}
metadata = featureset_metadata(df)
toJSON(metadata)
featureset_metadata = function(df){
metadata = c()
index = 1
for (i in colnames(df)){
met_data = list()
# met_data = list(name=i, description="none",schema=typeof(df[[i]]))
met_data[["name"]] = i
met_data[["description"]] = "none"
met_data[["schema"]] = typeof(df[[i]])
metadata[[index]] = list(met_data)
index = index + 1
}
return(data.frame(metadata))
}
metadata = featureset_metadata(df)
toJSON(metadata)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = vector(mode="list", length=3)
names(met_data) = c("name", "description", "schema")
met_data[[1]] = i; met_data[[2]] = "none"; met_data[[3]] = typeof(df[[i]])
metadata[[index]] = list(met_data)
index = index + 1
}
return(data.frame(metadata))
}
metadata = featureset_metadata(df)
toJSON(metadata)
toJSON(ydf)
import(yaml)
library(yaml)
toJSON(yaml.load_file("test.yaml"))
toJSON(yaml.load_file("test.yaml"))
key_list <- vector(mode="list", length=3)
names(key_list) <- c("key1", "key2", "key3")
key_list[[1]] <- 10
key_list[[2]] <- 20
key_list[[3]] <- 30
key_list
toJSON(key_list)
toJSON(listtoJSON(key_list)))
toJSON(listtoJSON(key_list))
toJSON(list(toJSON(key_list)))
toJSON(list(toJSON(key_list), toJSON(key_list)))
toJSON(list(key_list, key_list))
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = vector(mode="list", length=3)
names(met_data) = c("name", "description", "schema")
met_data[[1]] = i; met_data[[2]] = "none"; met_data[[3]] = typeof(df[[i]])
metadata[[index]] = list(met_data)
index = index + 1
}
return(metadata)
}
metadata = featureset_metadata(df)
toJSON(metadata)
featureset_metadata = function(df){
metadata = list()
index = 1
for (i in colnames(df)){
met_data = vector(mode="list", length=3)
names(met_data) = c("name", "description", "schema")
met_data[[1]] = i; met_data[[2]] = "none"; met_data[[3]] = typeof(df[[i]])
metadata[[index]] = met_data
index = index + 1
}
return(metadata)
}
metadata = featureset_metadata(df)
toJSON(metadata)
write_yaml(metadata, "t.yaml")
r = write_yaml(metadata, "t.yaml")
r
